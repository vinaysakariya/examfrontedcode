import React from "react";

const ResultData = (resultdata) => {
  console.log("aa", resultdata[0]);
  console.log("aa", resultdata[0]);
  const formatData = () => {
    let formattedText = `
        <html lang="en">
          <head>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <title>Marksheet</title>
            <link
              href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
              rel="stylesheet"
            />
          </head>
          <body class="font-sans">
            <div class="container mx-auto border border-black p-5 w-11/12">
              <div class="text-center mb-5">
              
              
<svg version="1.0" xmlns="http://www.w3.org/2000/svg"
 width="225.000000pt" height="225.000000pt" viewBox="0 0 225.000000 225.000000"
 preserveAspectRatio="xMidYMid meet"  >

<g transform="translate(0.000000,225.000000) scale(0.100000,-0.100000)"
fill="#000000" stroke="none">
<path d="M589 1906 c-21 -48 -18 -72 12 -81 22 -7 46 5 79 40 l25 27 -25 -7
c-14 -4 -35 -13 -47 -21 -22 -14 -22 -13 -16 36 3 28 3 50 -1 50 -4 0 -16 -20
-27 -44z"/>
<path d="M1633 1900 l6 -49 -32 19 c-47 29 -66 26 -36 -6 32 -35 56 -46 79
-39 25 8 27 53 5 95 -22 43 -29 37 -22 -20z"/>
<path d="M524 1858 c-10 -20 -14 -43 -10 -66 3 -21 0 -42 -7 -51 -11 -14 -10
-14 5 -2 10 7 25 11 33 7 19 -7 95 22 95 36 0 10 -48 6 -81 -7 -14 -5 -16 2
-12 54 3 34 2 61 -1 61 -3 0 -13 -14 -22 -32z"/>
<path d="M1703 1829 c4 -52 2 -59 -12 -54 -33 13 -81 17 -81 7 0 -5 19 -17 41
-26 38 -15 43 -15 65 -1 16 10 24 25 24 44 0 27 -26 91 -37 91 -3 0 -3 -27 0
-61z"/>
<path d="M900 1724 c-118 -58 -227 -110 -242 -116 -16 -5 -28 -13 -28 -16 0
-4 45 -31 100 -60 100 -53 100 -53 100 -28 0 22 7 27 53 41 166 48 318 48 486
-1 48 -14 53 -18 48 -40 -2 -13 -2 -24 1 -24 10 0 202 105 202 111 0 4 -21 16
-47 27 -27 11 -137 64 -246 116 -109 53 -201 96 -205 95 -4 0 -104 -48 -222
-105z"/>
<path d="M465 1803 c-19 -45 -22 -83 -10 -100 10 -14 10 -22 -2 -43 l-15 -25
18 22 c13 16 26 21 41 17 14 -4 35 3 59 20 39 26 39 26 11 26 -15 0 -41 -7
-57 -15 l-29 -15 4 53 c4 58 -7 92 -20 60z"/>
<path d="M559 1803 c-13 -16 -12 -17 4 -4 9 7 17 15 17 17 0 8 -8 3 -21 -13z"/>
<path d="M1670 1816 c0 -2 8 -10 18 -17 15 -13 16 -12 3 4 -13 16 -21 21 -21
13z"/>
<path d="M1768 1804 c-2 -11 -3 -40 -2 -66 l2 -48 -28 15 c-16 8 -41 15 -56
15 l-28 0 35 -25 c22 -17 44 -25 62 -23 22 2 32 -3 42 -22 8 -14 14 -20 15
-14 0 5 -6 19 -14 29 -11 16 -12 23 -1 38 13 19 7 66 -12 101 -10 17 -10 17
-15 0z"/>
<path d="M397 1711 c-11 -55 -8 -89 9 -99 13 -8 14 -13 4 -31 -6 -13 -9 -25
-7 -28 3 -2 8 5 12 16 4 14 15 21 31 21 14 0 40 15 62 35 l37 34 -33 -9 c-19
-5 -40 -14 -48 -20 -19 -16 -34 -4 -34 28 -1 15 -7 41 -14 57 l-12 30 -7 -34z"/>
<path d="M1832 1711 c-7 -19 -12 -44 -12 -57 0 -28 -16 -40 -34 -24 -8 6 -29
15 -47 20 l-33 10 34 -35 c23 -23 43 -35 61 -35 19 0 30 -6 34 -21 4 -11 9
-18 12 -16 2 3 0 14 -6 25 -8 15 -7 23 4 32 16 13 18 66 6 110 -7 25 -7 25
-19 -9z"/>
<path d="M345 1606 c-6 -36 -3 -52 11 -74 10 -15 17 -34 16 -42 -8 -43 -15
-42 -32 4 -27 70 -40 79 -40 29 0 -50 17 -100 36 -107 8 -3 14 -18 15 -33 l1
-28 7 25 c4 14 16 27 26 28 11 2 28 11 39 21 22 19 50 71 38 71 -12 0 -55 -32
-74 -55 -19 -22 -23 -9 -8 29 6 17 17 26 31 26 21 0 96 66 86 76 -7 8 -84 -33
-89 -47 -2 -7 -12 14 -22 47 -25 79 -33 85 -41 30z"/>
<path d="M1883 1625 c-7 -17 -13 -39 -15 -50 -6 -39 -20 -43 -65 -17 -24 13
-47 22 -50 18 -10 -10 64 -76 86 -76 14 0 25 -9 31 -26 17 -45 11 -47 -30 -10
-46 42 -66 47 -49 14 19 -37 51 -68 70 -68 21 0 24 -5 34 -50 l7 -35 -39 43
c-48 50 -67 55 -52 13 13 -37 53 -81 74 -81 11 0 15 -11 15 -42 l-1 -43 -18
35 c-11 19 -31 46 -46 60 l-28 25 7 -29 c14 -58 35 -96 58 -105 21 -8 23 -14
20 -51 l-4 -43 -30 62 c-33 70 -54 81 -44 24 10 -59 26 -92 48 -99 16 -5 18
-11 13 -37 -11 -49 -22 -53 -30 -11 -7 38 -31 94 -40 94 -3 0 -5 -27 -5 -60 0
-50 4 -65 23 -84 23 -23 23 -24 7 -57 l-18 -33 -7 45 c-4 24 -15 58 -23 74
l-16 30 -7 -50 c-8 -59 -2 -93 19 -118 15 -16 14 -21 -3 -53 -10 -18 -21 -34
-24 -34 -3 0 -5 26 -3 57 2 32 -1 69 -6 83 l-10 25 -12 -30 c-22 -56 -25 -123
-6 -144 16 -18 16 -21 -15 -55 -17 -20 -33 -35 -35 -33 -2 1 4 27 12 56 10 34
13 65 9 89 l-8 37 -28 -60 c-29 -61 -37 -109 -19 -120 6 -3 10 -13 10 -21 0
-12 -73 -14 -515 -14 -442 0 -515 2 -515 14 0 8 5 18 11 22 15 9 4 74 -23 131
l-22 46 -9 -28 c-9 -26 -2 -79 18 -140 5 -13 -6 -7 -30 18 -35 37 -36 39 -20
57 20 22 17 92 -5 145 l-13 30 -9 -35 c-5 -19 -8 -56 -6 -82 2 -26 2 -48 2
-48 -1 0 -14 16 -29 36 -27 35 -27 36 -7 49 24 18 32 56 22 120 l-7 50 -17
-39 c-10 -22 -18 -54 -19 -73 -2 -41 -10 -42 -29 -2 -15 29 -14 32 8 54 20 20
24 34 24 85 0 33 -2 60 -5 60 -10 0 -45 -84 -46 -110 -1 -25 -1 -24 -14 5 -18
39 -18 55 0 55 8 0 21 13 29 28 17 33 30 112 19 112 -12 0 -49 -61 -57 -94 -9
-35 -11 -32 -19 17 -5 34 -3 39 19 47 24 10 46 47 60 106 l7 29 -28 -25 c-15
-14 -35 -41 -46 -60 l-18 -35 -1 43 c0 31 4 42 15 42 21 0 61 44 74 81 14 41
-4 38 -48 -10 l-36 -39 -18 21 c-9 12 -17 26 -17 32 0 5 -11 24 -25 40 l-25
30 6 -50 c7 -56 27 -95 49 -95 11 0 15 -11 14 -37 l0 -38 -17 25 c-25 36 -62
73 -69 67 -7 -7 15 -75 33 -105 8 -12 23 -22 33 -22 13 0 20 -9 24 -32 6 -45
2 -46 -29 -9 -27 33 -62 56 -71 48 -6 -7 25 -68 50 -94 11 -13 29 -23 39 -23
11 0 23 -11 28 -26 16 -42 12 -46 -23 -20 -32 24 -87 50 -87 41 0 -3 14 -24
31 -48 34 -46 66 -69 90 -61 10 3 21 -8 32 -31 19 -40 16 -42 -21 -17 -35 24
-91 46 -98 39 -4 -3 17 -29 46 -58 44 -44 55 -50 80 -46 24 5 32 1 49 -26 11
-17 19 -33 17 -34 -1 -2 -17 4 -35 13 -18 9 -51 19 -74 22 -38 5 -41 4 -29
-11 8 -9 36 -30 64 -48 44 -28 54 -31 78 -22 25 9 30 8 50 -20 l23 -30 -24 6
c-49 14 -99 19 -116 13 -14 -6 -9 -12 25 -32 59 -35 98 -45 127 -32 16 7 28 7
41 -1 18 -10 18 -10 -3 -11 -47 0 -53 -9 -53 -76 l0 -64 40 0 c22 0 57 -7 77
-15 53 -22 863 -22 916 0 20 8 56 15 79 15 l43 0 -4 62 c-3 66 -10 77 -51 78
-23 1 -23 2 -6 11 13 8 25 8 41 1 29 -13 68 -3 127 32 64 38 23 46 -91 19
l-24 -6 23 31 c19 26 26 29 47 21 30 -11 73 7 124 52 l34 30 -42 -4 c-23 -3
-56 -12 -74 -21 -18 -9 -33 -16 -35 -16 -2 0 6 16 17 35 18 29 24 33 49 28 25
-4 36 2 80 46 29 29 50 55 46 58 -7 7 -63 -15 -98 -39 -30 -21 -35 -13 -16 27
7 16 17 24 26 20 21 -8 64 22 92 63 44 65 37 69 -39 18 -28 -19 -51 -31 -51
-26 0 26 22 60 38 60 10 0 28 10 39 23 25 26 56 87 50 94 -9 8 -44 -15 -71
-48 -31 -37 -35 -36 -29 9 4 23 11 32 24 32 10 0 25 10 33 23 18 29 40 97 33
104 -7 6 -44 -31 -69 -67 l-17 -25 0 38 c-1 26 3 37 14 37 22 0 43 39 50 95
l6 50 -22 -25 c-12 -14 -26 -37 -31 -52 -6 -16 -14 -25 -19 -22 -14 9 -10 54
5 60 18 7 36 57 36 100 0 49 -16 42 -38 -18 l-20 -53 -11 28 c-9 24 -8 33 9
54 20 26 24 58 11 103 l-7 24 -11 -29z m-1115 -1024 c3 -10 0 -12 -12 -8 -9 4
-16 2 -16 -2 0 -5 7 -12 16 -15 9 -3 14 -15 12 -28 -2 -18 -10 -23 -30 -23
-16 0 -27 5 -25 10 1 6 11 9 22 8 19 -2 18 -1 -2 14 -25 17 -30 48 -10 56 20
9 40 3 45 -12z m152 4 c0 -9 -10 -15 -26 -15 -21 0 -25 -4 -22 -22 2 -17 9
-23 26 -22 12 0 22 -5 22 -13 0 -10 -10 -13 -32 -11 -26 2 -35 9 -43 32 -8 24
-6 31 14 47 28 23 61 25 61 4z m100 -5 c0 -11 7 -20 15 -20 9 0 15 9 15 21 0
42 25 12 28 -34 2 -37 0 -47 -12 -47 -9 0 -16 9 -16 20 0 11 -7 20 -15 20 -8
0 -15 -9 -15 -20 0 -11 -7 -20 -15 -20 -11 0 -15 12 -15 50 0 38 4 50 15 50 8
0 15 -9 15 -20z m210 0 c24 -24 24 -29 4 -58 -17 -24 -53 -29 -72 -10 -17 17
-15 54 4 72 21 21 40 20 64 -4z m161 10 c22 -12 26 -59 7 -78 -7 -7 -21 -12
-33 -12 -29 0 -45 19 -45 52 0 39 34 57 71 38z m124 -31 c0 -24 5 -35 18 -37
29 -6 19 -22 -13 -22 -29 0 -30 1 -30 51 0 36 4 49 13 46 6 -2 12 -19 12 -38z"/>
<path d="M1184 587 c-8 -21 1 -47 16 -47 19 0 23 31 7 48 -15 14 -17 14 -23
-1z"/>
<path d="M1356 593 c-12 -13 -6 -53 9 -53 9 0 15 9 15 24 0 26 -12 40 -24 29z"/>
<path d="M960 1535 c-92 -21 -90 -19 -90 -70 0 -25 1 -45 3 -45 2 0 28 8 58
17 40 13 90 17 194 17 104 0 154 -4 194 -17 30 -9 56 -17 58 -17 2 0 3 21 1
47 l-3 47 -50 14 c-76 20 -286 25 -365 7z"/>
<path d="M1010 1370 c-25 -5 -67 -15 -95 -23 l-50 -13 0 -74 0 -75 35 -7 c19
-3 55 -12 80 -19 68 -18 242 -14 329 8 132 34 105 43 -128 43 -181 0 -211 2
-211 15 0 13 30 15 210 15 203 0 210 1 210 20 0 19 -7 20 -210 20 -179 0 -210
2 -210 15 0 12 32 15 207 17 126 2 208 7 210 13 9 30 -279 64 -377 45z"/>
</g>
</svg>

                <h1 class="text-2xl font-bold my-2">CENTRAL BOARD OF HIGHER EDUCATION /CLONE</h1>
                <h3 class="text-xl">Central Hindu School</h3>
              </div>
            
              <p><strong>Student Name:</strong> ${resultdata[0]?.username}</p>
              <p><strong>Email:</strong> ${resultdata[0]?.email}</p>
              <p><strong>Date:</strong> ${resultdata[0]?.date}</p>
              <p><strong>Exam-Name:</strong> ${resultdata[0]?.QuizName}</p>
              <table class="w-full border-collapse border border-black mt-3">
                <thead>
                  <tr>
                    <th class="border border-black px-2 py-1">Subject Code</th>
                    <th class="border border-black px-2 py-1">Subject Name</th>
                    <th class="border border-black px-2 py-1">Min Marks</th>
                    <th class="border border-black px-2 py-1">Max Marks</th>
                    <th class="border border-black px-2 py-1">Marks Obtained</th>
                    <th class="border border-black px-2 py-1">Remark</th>
                  </tr>
                </thead>
                <tbody>`;

    resultdata[0]?.sectionwiseResult?.map((subject, index) => {
      formattedText += `
                  <tr
                    key=${index}
                    class="border-b border-gray-200 hover:bg-gray-200 w-full ${
                      index % 2 === 0 ? "bg-slate-50" : "bg-white"
                    }"
                  >
                    <td class="border border-black text-center p-2">${
                      index + 1
                    }</td>
                    <td class="border border-black px-2 py-1">${
                      subject.sectionname
                    }</td>
                    <td class="border border-black px-2 py-1">${
                      resultdata[0]?.sectionwiseTotalResult[index]
                        .sectionwisePassing
                    }</td>
                    <td class="border border-black px-2 py-1">${
                      resultdata[0]?.sectionwiseTotalResult[index].weitage
                    }</td>
                    <td class="border border-black px-2 py-1">${
                      subject.weitage
                    }</td>
                    <td class="border border-black px-2 py-1">${
                      subject.status
                    }</td>
                  </tr>`;
    });

    formattedText += `
                  <tr>
                    <td colspan="4" class="border border-black px-2 py-1">
                      <strong>Total</strong>
                    </td>
                    <td class="border border-black px-2 py-1"><strong>${resultdata[0]?.result}/${resultdata[0]?.TotalMarks}</strong></td>
                    <td class="border border-black px-2 py-1"></td>
                  </tr>
                </tbody>
              </table>
              <div class="text-center mt-2">
                <p><strong>Result:</strong> ${resultdata[0]?.finalStatus}</p>
              </div>
            </div>
          </body>
        </html>`;

    return formattedText;
  };
  return <>{formatData()}</>;
};

export default ResultData;
